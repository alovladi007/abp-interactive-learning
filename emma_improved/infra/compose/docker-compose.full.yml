version: "3.9"

services:
  db:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: emma
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  neo4j:
    image: neo4j:5
    environment:
      - NEO4J_AUTH=neo4j/neo4jpassword
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=512m
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    healthcheck:
      test: ["CMD", "cypher-shell", "-u", "neo4j", "-p", "neo4jpassword", "RETURN 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  sandbox:
    build:
      context: ../../
      dockerfile: infra/docker/Dockerfile.sandbox
    ports:
      - "8081:8081"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/docs"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ../../
      dockerfile: infra/docker/Dockerfile.api.full
    environment:
      - USE_LANGGRAPH=1
      - DATABASE_URL=postgresql+psycopg://postgres:postgres@db:5432/emma
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=neo4jpassword
      - SANDBOX_URL=http://sandbox:8081
      - PYTHONUNBUFFERED=1
      - PYTHONPATH=/app:/app/packages:/app/services
    depends_on:
      db:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      sandbox:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ../../apps/api:/app/apps/api
      - ../../services:/app/services
      - ../../packages:/app/packages
      - ../../scripts:/app/scripts

  web:
    build:
      context: ../../
      dockerfile: infra/docker/Dockerfile.web.full
    environment:
      - NEXT_PUBLIC_API_BASE=http://localhost:8000
    depends_on:
      - api
    ports:
      - "3000:3000"

volumes:
  postgres_data:
  neo4j_data:
