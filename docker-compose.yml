version: '3.9'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: qbank-postgres
    environment:
      POSTGRES_DB: qbank_production
      POSTGRES_USER: qbank_admin
      POSTGRES_PASSWORD: ${DB_PASSWORD:-qbank_secure_2024}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./qbank-backend/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
    ports:
      - "5432:5432"
    networks:
      - qbank-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U qbank_admin -d qbank_production"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: qbank-redis
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - qbank-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./qbank-backend
      dockerfile: Dockerfile
    container_name: qbank-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://qbank_admin:${DB_PASSWORD:-qbank_secure_2024}@postgres:5432/qbank_production
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      ENVIRONMENT: ${ENVIRONMENT:-development}
    volumes:
      - ./qbank-backend:/app
    ports:
      - "8000:8000"
    networks:
      - qbank-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: qbank-nginx
    depends_on:
      - backend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./:/usr/share/nginx/html
    ports:
      - "80:80"
      - "443:443"
    networks:
      - qbank-network

  # pgAdmin for Database Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: qbank-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@qbank.com
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin123}
    ports:
      - "5050:80"
    networks:
      - qbank-network
    depends_on:
      - postgres

  # Celery Worker for Background Tasks
  celery-worker:
    build:
      context: ./qbank-backend
      dockerfile: Dockerfile
    container_name: qbank-celery-worker
    depends_on:
      - redis
      - postgres
    environment:
      DATABASE_URL: postgresql://qbank_admin:${DB_PASSWORD:-qbank_secure_2024}@postgres:5432/qbank_production
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
    volumes:
      - ./qbank-backend:/app
    networks:
      - qbank-network
    command: celery -A app.celery_app worker --loglevel=info

  # Celery Beat for Scheduled Tasks
  celery-beat:
    build:
      context: ./qbank-backend
      dockerfile: Dockerfile
    container_name: qbank-celery-beat
    depends_on:
      - redis
      - postgres
    environment:
      DATABASE_URL: postgresql://qbank_admin:${DB_PASSWORD:-qbank_secure_2024}@postgres:5432/qbank_production
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: redis://redis:6379/1
    volumes:
      - ./qbank-backend:/app
    networks:
      - qbank-network
    command: celery -A app.celery_app beat --loglevel=info

  # Flower for Celery Monitoring
  flower:
    image: mher/flower:2.0
    container_name: qbank-flower
    depends_on:
      - celery-worker
    environment:
      CELERY_BROKER_URL: redis://redis:6379/1
      FLOWER_PORT: 5555
    ports:
      - "5555:5555"
    networks:
      - qbank-network

networks:
  qbank-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: